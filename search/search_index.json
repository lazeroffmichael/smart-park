{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Description Parking lots and garages, especially in the areas where large numbers of vehicles arrive at the same time, have problems with traffic congestion. The goal of this project is to develop an IoT system to provide information about free parking spots and also to optimize the traffic in parking lots and garages, targeting one of the crucial needs of a Smart City. The key components of the system are the driver\u2019s smartphone, the parking app (to be developed as part of this project), an embedded system installed in the car, and cloud service to collect and interchange the data (IoT architecture). The mobile app will monitor the driver\u2019s behavior and detect when the driver is approaching the car. This information will be sent to the cloud and shared with drivers who are searching for a parking spot. The embedded system in the car will include a GPS receiver to post periodic vehicle location to the cloud and sense adjacent parking spots to provide additional information. The system will be able to provide the information about occupancy in each lot and provide live information about the closest parking lot with free spots. Goals Display information about available parking spots Predict availability of parking spots soon to be available and communicate that to other drivers","title":"Overview"},{"location":"#description","text":"Parking lots and garages, especially in the areas where large numbers of vehicles arrive at the same time, have problems with traffic congestion. The goal of this project is to develop an IoT system to provide information about free parking spots and also to optimize the traffic in parking lots and garages, targeting one of the crucial needs of a Smart City. The key components of the system are the driver\u2019s smartphone, the parking app (to be developed as part of this project), an embedded system installed in the car, and cloud service to collect and interchange the data (IoT architecture). The mobile app will monitor the driver\u2019s behavior and detect when the driver is approaching the car. This information will be sent to the cloud and shared with drivers who are searching for a parking spot. The embedded system in the car will include a GPS receiver to post periodic vehicle location to the cloud and sense adjacent parking spots to provide additional information. The system will be able to provide the information about occupancy in each lot and provide live information about the closest parking lot with free spots.","title":"Description"},{"location":"#goals","text":"Display information about available parking spots Predict availability of parking spots soon to be available and communicate that to other drivers","title":"Goals"},{"location":"app/","text":"Goals 2 Views View 1: Haven't Parked Have a push button for making the request to update the state of the garage. Show the available spots Show the prediction for the next spot to open Choose the spot that you parked in. View 2: Parked Say which spot that you parked in","title":"App"},{"location":"app/#goals","text":"","title":"Goals"},{"location":"app/#2-views","text":"View 1: Haven't Parked Have a push button for making the request to update the state of the garage. Show the available spots Show the prediction for the next spot to open Choose the spot that you parked in. View 2: Parked Say which spot that you parked in","title":"2 Views"},{"location":"cloud/","text":"Real Time Database The Real Time Database (RTDB) will be used to contain the garage state and update the state to all the users. Firestore Database The firestore database will be used to hold other information (such as user information, coordinate information etc) ML Pipeline Receive GPS coords Receive ID of the user 1) Determine if coords inside of geofence 2) If inside, make the prediction for whether or not the person is returning to the garage. 3) If prediction is true, then make the time estimation for the spot and update the field in the RTDB. How Works Have a main function which will make the calls for all the sub functions to be ran. ex. def main ( coords , user_id ): # Determine if coords are in the geofence check_geofence () # If coords are in geofence make prediction prediction () # If prediction is true update the prediction time in the DB predict_time () IoT Devices Parking sensors are simulated and communicate through http requests. In a real life scenario, devices can also communicate with MQTT. The role of the devices is to update the state of the RTDB. To manage the IoT devices, Google IoT core could be used and configured to do the necessary updates. Geofence A geofence is used to define the region around the parking garage where user trajectory can be reasonably predicted. This geofence could be adapted to extend to a farther range if there are specific pathways where it is likely that individuals headed a certain direction are returning to the parking garage. Determining If A User Is Inside Of The Geofence Since the geofence is a defined set of coordinates, we can determine whether or not a user's GPS coordinates are inside of the geofence by using an algorithm that determines whether a point is contained inside of a polygon.","title":"Cloud"},{"location":"cloud/#real-time-database","text":"The Real Time Database (RTDB) will be used to contain the garage state and update the state to all the users.","title":"Real Time Database"},{"location":"cloud/#firestore-database","text":"The firestore database will be used to hold other information (such as user information, coordinate information etc)","title":"Firestore Database"},{"location":"cloud/#ml-pipeline","text":"Receive GPS coords Receive ID of the user 1) Determine if coords inside of geofence 2) If inside, make the prediction for whether or not the person is returning to the garage. 3) If prediction is true, then make the time estimation for the spot and update the field in the RTDB.","title":"ML Pipeline"},{"location":"cloud/#how-works","text":"Have a main function which will make the calls for all the sub functions to be ran. ex. def main ( coords , user_id ): # Determine if coords are in the geofence check_geofence () # If coords are in geofence make prediction prediction () # If prediction is true update the prediction time in the DB predict_time ()","title":"How Works"},{"location":"cloud/#iot-devices","text":"Parking sensors are simulated and communicate through http requests. In a real life scenario, devices can also communicate with MQTT. The role of the devices is to update the state of the RTDB. To manage the IoT devices, Google IoT core could be used and configured to do the necessary updates.","title":"IoT Devices"},{"location":"cloud/#geofence","text":"A geofence is used to define the region around the parking garage where user trajectory can be reasonably predicted. This geofence could be adapted to extend to a farther range if there are specific pathways where it is likely that individuals headed a certain direction are returning to the parking garage.","title":"Geofence"},{"location":"cloud/#determining-if-a-user-is-inside-of-the-geofence","text":"Since the geofence is a defined set of coordinates, we can determine whether or not a user's GPS coordinates are inside of the geofence by using an algorithm that determines whether a point is contained inside of a polygon.","title":"Determining If A User Is Inside Of The Geofence"},{"location":"data/","text":"Approach Using Google Earth, 104 simulated paths are created in the surrounding region of Cottage Grove Parking Garage at UNLV. Strengthening Real Data With Created Data In a real life scenario, it is expected that coordinate data for training the model would come from actual user data that is collected around the region of the parking garage. Because of the ease of creating new paths around the region of a parking garage in google earth, it is possible to strengthen the accuracy of a model that is being trained using only real data. All Simulated Paths Each path contains 20 coordinates, and is labeled in the dataset for if the path enters the garage, or doesn't enter the garage. Garage Layout Garage Layout There are 4 main entrances to the garage labeled by the markers A , B , C , D . Furthermore there is a unique location known as the Box Office adjacent to the garage that is labeled. The labels for the garage are included only for easier tracking of the paths - in a real life data collection scenario this would not be important. Distributions of Paths Important Since the paths are simulated, they do not accurately represent the proper distribution of traffic in the region outside of this particular garage. With real data collection, the distribution and traffic of certain paths would be captured and enhance the accuracy of the trained model. Distributions Location Entered Garage Missed Garage A 25 20 B 22 16 C 9 2 D 3 1 Box Office 0 6 Total 59 45 Images Location A Entered Garage Missed Garage Location B Entered Garage Missed Garage Location C Entered Garage Missed Garage Location D Entered Garage Missed Garage Location Box Office Missed Garage","title":"Data Simulation"},{"location":"data/#approach","text":"Using Google Earth, 104 simulated paths are created in the surrounding region of Cottage Grove Parking Garage at UNLV. Strengthening Real Data With Created Data In a real life scenario, it is expected that coordinate data for training the model would come from actual user data that is collected around the region of the parking garage. Because of the ease of creating new paths around the region of a parking garage in google earth, it is possible to strengthen the accuracy of a model that is being trained using only real data. All Simulated Paths Each path contains 20 coordinates, and is labeled in the dataset for if the path enters the garage, or doesn't enter the garage.","title":"Approach"},{"location":"data/#garage-layout","text":"Garage Layout There are 4 main entrances to the garage labeled by the markers A , B , C , D . Furthermore there is a unique location known as the Box Office adjacent to the garage that is labeled. The labels for the garage are included only for easier tracking of the paths - in a real life data collection scenario this would not be important.","title":"Garage Layout"},{"location":"data/#distributions-of-paths","text":"Important Since the paths are simulated, they do not accurately represent the proper distribution of traffic in the region outside of this particular garage. With real data collection, the distribution and traffic of certain paths would be captured and enhance the accuracy of the trained model. Distributions Location Entered Garage Missed Garage A 25 20 B 22 16 C 9 2 D 3 1 Box Office 0 6 Total 59 45 Images Location A Entered Garage Missed Garage Location B Entered Garage Missed Garage Location C Entered Garage Missed Garage Location D Entered Garage Missed Garage Location Box Office Missed Garage","title":"Distributions of Paths"},{"location":"garage/","text":"Details Sensors in each spot that are linked to the entry in the RTDB. When the sensor is triggered on, update the RTDB. When the user selects the spot, update that in RTDB. Only the spots that have users linked to the spot will be able to provide prediction information about when the spot will become available. Database Model For The Garage { 'cottage_grove' 'floor #' 'spots' '1' 'type' 'status' 'taken_by' }","title":"Garage"},{"location":"garage/#details","text":"Sensors in each spot that are linked to the entry in the RTDB. When the sensor is triggered on, update the RTDB. When the user selects the spot, update that in RTDB. Only the spots that have users linked to the spot will be able to provide prediction information about when the spot will become available.","title":"Details"},{"location":"garage/#database-model-for-the-garage","text":"{ 'cottage_grove' 'floor #' 'spots' '1' 'type' 'status' 'taken_by' }","title":"Database Model For The Garage"},{"location":"model/","text":"Original Approach","title":"Model"},{"location":"model/#original-approach","text":"","title":"Original Approach"}]}